(define 'eval--internal eval)
(define 'eval (lambda (x) (eval--internal (parse x))))

(define 'cadr (lambda (x) (car (cdr x))))


(define 'load (lambda (file) (eval (read-file-text file))))

(define 'search-path '())

(define 'add-to-list (lambda (lst val)
      		     (if (nil? lst)
			 (cons val '())
			 (cons (car lst) (add-to-list (cdr lst) val)))))

(define 'bootstrap/load-file (lambda (filename lst)
			     (if (null? lst)
				 nil
				 (let ((path (concat (car lst) "/" filename)))
				   (if (file-exists? path)
				       (load path)
				       (bootstrap/load-file filename (cdr lst)))))))

(define 'load-file (lambda (file)
		   (bootstrap/load-file file search-path)))
		   

(define 'command-line (lambda () args))