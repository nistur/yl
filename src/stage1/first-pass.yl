;; Copyright (c) 2023 Philipp Geyer and Isak Andersson
;;
;;   This file is part of yl.
;;
;;   yl is free software: you can redistribute it and/or modify it
;;   under the terms of the GNU Lesser General Public License as
;;   published by the Free Software Foundation, either version 3 of
;;   the License, or (at your option) any later version.
;;
;;   yl is distributed in the hope that it will be useful, but WITHOUT
;;   ANY WARRANTY; without even the implied warranty of
;;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
;;   Lesser General Public License for more details.
;;
;;   You should have received a copy of the GNU Lesser General Public
;;   License along with yl. If not, see
;;   <https://www.gnu.org/licenses/>.
;;
;; Philipp Geyer             Isak Andersson
;; philipp@geyer.co.uk       contact@bitpuffin.com

(define first-pass/symbol (lambda (node)
			     (display node) (newline)
			     node))
(define first-pass/loop (lambda (node)
			   (cond
			    ((nil? node))
			    ((list? node) (cons (first-pass/loop (car node)) (first-pass/loop (cdr node))))
			    ((symbol? node) (first-pass/symbol node))
			    ((string? node) (first-pass/symbol node))
			    ((value? node) (first-pass/symbol node)))))

; this doesn't work, it wasn't intended to work, I'm just checking it
; in because I fixed other things
(define first-pass (lambda (ast)
		      #(first-pass/loop ast)))

